With a valid config file in the current directory, simply type the command "timemachine-train" to train force field parameters to experimental enthalpy or RMSD

"run_type": "train" (training split) or "test" (testing split)
"loss_type: "RMSD" (train to experimental RMSD) or "enthalpy (train to experimental enthalpy)
"param_file" (optional): name of .npz file containing parameters for a testing split, if not specified then uses initial Open Force Field parameters
"optimizer": "Adam" or "SGD" or "RMSProp" or "Adagrad" or "SM3" (which optimizer to use for gradient descent)
"learning_rate": learning rate for gradient descent (1e-3 is a good place to start, but can be any float and heavily depends on the system/optimizer being used"
"num_epochs": number of epochs in a training split, or number of tests in a testing split
"host_path" (enthalpy only): path to the host XML or PDB file
"fit_method" (enthalpy only): "absolute" or "relative" for training to either absolute or relative binding energies
"batch_size": number of compounds per batch
"training_data": .npz (RMSD) or .csv (Enthalpy) file containing experimental data for training
"loss_fn" (enthalpy only): "L2" or "L1" or "Huber" or "log-cosh" depending on the preferred loss function for comparing computed to experimental enthalpy
"dp_idxs": array of indices to specify which parameters to train to [0: bond k value, 1: ideal bond length, 2: angle k value, 3: ideal bond angle, 4: torsion k value, 5: torsion phase, 6: torsion period, 7: charges, 8: lj sigma, 9: lj epsilon]
"guest_directory": path to directory containing the ligands for binding enthalpy or RMSD training
"boltzmann": "True" or "False" to turn on or off Boltzmann weighting for multi-conformer training
"remove_hydrogens" (RMSD only): "True" or "False" to specify whether to train to only heavy atom RMSD
"num_conformers" (optional): specify the number of conformers to use for each compound during training (default = 1)
"random" (RMSD only): "True" or "False" to turn off or on seeding for conformer generation (i.e. if "True" then conformers are unseeded, if "False" then conformers are seeded and the same conformers are generated for each epoch)
